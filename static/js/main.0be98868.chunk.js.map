{"version":3,"sources":["logo.svg","Badge.js","NameTag.js","App.js","reportWebVitals.js","index.js"],"names":["Badge","props","color","className","NameTag","tag","name","type","color_stat","output","src","App","tttt","func","call","this","test","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,I,MCYAA,MAXf,SAAeC,GAEX,IAAIC,EAAQD,EAAMC,MAElB,OACI,sBAAMC,UAAS,gBAAWD,GAA1B,SACsB,oBAAVA,EAAwB,WAA/B,kBAAuDA,M,MCiDrDE,MApCf,SAAiBH,GAEb,IAAIC,EAAQD,EAAMC,MACdG,EAAMJ,EAAMI,IACZC,EAAOL,EAAMK,KACbC,EAAON,EAAMM,KAEbC,EAAc,cAAC,EAAD,CAAON,MAAOA,IAE5BO,EAAS,GACb,OAAQF,GACJ,IAAK,SACL,QACIE,EAAS,gCACT,MACJ,IAAK,WACDA,EACI,gCACI,4BAAID,IACJ,4BAAIF,IACJ,4BAAID,OAapB,OANI,sBAAKF,UAAU,UAAf,UACI,qBAAKO,IAAI,kBACRD,MCnCE,SAASE,IAEtB,IAAIC,EAAO,OAKX,OAhBF,SAAcC,GAEC,OAATA,GAAiC,oBAATA,GAE1BA,EAAKC,KAAKC,KAAM,2BAQlBC,EAAK,SAAAC,GACHL,EAAOK,KAIP,sBAAKd,UAAU,MAAf,UACE,cAAC,EAAD,CAASG,KAAK,OAAOD,IAAI,IAAIH,MAAM,QACnC,cAAC,EAAD,CAASI,KAAK,OAAOD,IAAI,IAAIE,KAAK,WAClC,cAAC,EAAD,CAASD,KAAK,OAAOD,IAAI,IAAIE,KAAK,aACjCK,KC1BP,IAYeM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0be98868.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\r\nfunction Badge(props) {\r\n\r\n    let color = props.color;\r\n\r\n    return (\r\n        <span className={`Badge ${color}`}>\r\n            {typeof(color) == 'undefined' ? 'no-color' : `color : ${color}`}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Badge","import React from 'react'\r\nimport Badge from './Badge';\r\nimport './Badge.css';\r\n\r\n\r\n// class NameTag extends React.Component {\r\n\r\n//     render() {\r\n//         let color = this.props.color;\r\n//         let tag = this.props.tag;\r\n//         let name = this.props.name;\r\n//         return (\r\n//             <div className='NameTag'>\r\n//                 <img src='./logo192.png'/>\r\n//                 {name} / {tag}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nfunction NameTag(props) {\r\n\r\n    let color = props.color;\r\n    let tag = props.tag;\r\n    let name = props.name;\r\n    let type = props.type;\r\n\r\n    let color_stat = (<Badge color={color} />)\r\n\r\n    let output = ''\r\n    switch (type) {\r\n        case 'inline':\r\n        default:\r\n            output = '{color_stat} / {name} / {tag}'\r\n            break;\r\n        case 'breakall':\r\n            output = (\r\n                <div>\r\n                    <p>{color_stat}</p>\r\n                    <p>{name}</p>\r\n                    <p>{tag}</p>\r\n                </div>\r\n            )\r\n            break;\r\n    }\r\n\r\n    let tag_app = (\r\n        <div className='NameTag'>\r\n            <img src='./logo192.png' />\r\n            {output}\r\n        </div>\r\n    )\r\n\r\n    return tag_app\r\n}\r\n\r\nexport default NameTag","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NameTag from './NameTag'\n\nfunction test(func) {\n  // func 파라미터가 함수일 경우.\n  if (func !== null && typeof func === \"function\") {\n    // 파라미터를 실행\n    func.call(this, \"from test1 was called. \");\n  }\n}\n\n\nexport default function App() {\n  \n  let tttt = 'test'\n  test(item => {\n    tttt = item\n  })\n\n  return (\n    <div className='App'>\n      <NameTag name='test' tag='1' color='red'/>\n      <NameTag name='test' tag='2' type='inline'/>\n      <NameTag name='test' tag='3' type='breakall'/>\n      {tttt}\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}